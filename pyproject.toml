[project]
name = "sahi"
version = "0.11.20"
readme = "README.md"
description = "A vision library for performing sliced inference on large images/small objects"
requires-python = ">=3.8"
license = "MIT"
license-files = ["./LICENSE"]
dependencies = [
  "opencv-python",
  "shapely>=2.0.0",
  "tqdm>=4.48.2",
  "pillow>=8.2.0",
  "pybboxes==0.1.6",
  "pyyaml",
  "fire",
  "terminaltables",
  "requests",
  "click",
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
homepage = "https://github.com/obss/sahi"

[project.scripts]
sahi = "sahi.cli:app"

[project.optional-dependencies]
ci = [
  # "torch>=1.13.1;python_version<'3.12'",
  "torch>=1.13.0;python_version<='3.11'",
  "torch==2.3.0;python_version>='3.12'",
  "torchvision>=0.14.1",
  # "yolov5>=7.0.13",
  "transformers>=4.35.0",
  "pycocotools>=2.0.7",
  "ultralytics>=8.3.50",
  "scikit-image",
  "fiftyone",
  "mmengine==0.7.3;python_version<'3.12'",
  "mmcv==2.0.0;python_version<'3.12'",
  "mmdet==3.0.0;python_version<'3.12'",
  "onnx;python_version>='3.10'",
  "onnxruntime;python_version>='3.10'",
  # deepsparse depends on onnxruntime and is only available with 3.10 and 3.11
  "deepsparse;python_version>='3.10' and python_version<'3.12'",
]

[tool.uv]
find-links = [
  "https://download.openmmlab.com/mmcv/dist/cpu/torch1.13.0/index.html",
]

dev-dependencies = [
  "pytest",
  "ruff",
  "pre-commit>=2.0",
  "jupyterlab==3.0.14",
  "matplotlib-stubs>=0.2.0",
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch-cpu", extra = "ci" }
torchvision = { index = "pytorch-cpu", extra = "ci" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
exclude = ["**/__init__.py", ".git", "__pycache__", "*.ipynb"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["--import-mode=importlib", "--no-header"]
pythonpath = ["."]
